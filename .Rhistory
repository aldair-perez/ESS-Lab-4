shapiro.test(coastal_salamander_data$weight_g[coastal_salamander_data$section == "clear cut"])
View(coastal_salamander_data)
coastal_salamander_data <- subset(s, species == "Coastal giant salamander")
contingency_table <- table(coastal_salamander_data$section, coastal_salamander_data$unittype)
chi_square <- chisq.test(contingency_table)
print(chi_square)
shapiro.test(coastal_salamander_data$weight_g[coastal_salamander_data$section == "clear cut"])
colnames(coastal_salamander_data)
View(coast_salamander)
View(trout_clean)
View(sally_clean)
library(tidyverse)
library(ggpubr)
library(lterdatasampler)
library(car)
library(visdat)
?and_vertebrates
view(and_vertebrates)
and_vertebrates <-
filter(species == "Coastal giant salamander") |>
drop_na(unittype) |>
count(unittype)
colnames(and_vertebrates)
View(coast_salamander)
rm(coast_salamander)
rm(coastal_salamander)
rm(coastal_salamander_data)
rm(chi_square)
coastal_giant_salamander_data <- and_vertebrates(and_vertebrates$species == "Coastal giant salamander")
coastal_giant_salamander_data <- and_vertebrates[and_vertebrates$species == "Coastal Giant Salamander", ]
View(coastal_giant_salamander_data)
rm(coastal_giant_salamander_data)
coastal_giant_salamander_data <- and_vertebrates %>%
filter(species == "Coastal giant salamander")
View(coastal_giant_salamander_data)
contingency_table <- table(coastal_giant_salamander_data$section, coastal_giant_salamander_data$unittype)
print(contingency_table)
print(contingency_table)
chi_square_result <- chisq.test(contingency_table)
View(chi_square_result)
print(chi_square_result)
unique(coastal_giant_salamander_data$section)
clear_cut_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "clear-cut", ]
old_growth_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "old-growth", ]
View(clear_cut_data)
View(old_growth_data)
head(clear_cut_data)
rm(clear_cut_data)
rm(old_growth_data)
t_test_result <- t.test(weight_g ~ section, data = coastal_giant_salamander_data[coastal_giant_salamander_data$section %in% c("clear-cut", "old-growth"), ])
clear_cut_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "clear-cut", ]
old_growth_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "old-growth", ]
t_test_result <- t.test(weight_g ~ section, data = coastal_giant_salamander_data[coastal_giant_salamander_data$section %in% c("clear-cut", "old-growth"), ])
unique(coastal_giant_salamander_data$section)
clear_cut_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "CC", ]
old_growth_data <- coastal_giant_salamander_data[coastal_giant_salamander_data$section == "OG", ]
View(clear_cut_data)
View(old_growth_data)
t_test_result <- t.test(weight_g ~ section, data = coastal_giant_salamander_data[coastal_giant_salamander_data$section %in% c("CC", "OG"), ])
View(t_test_result)
print(t_test_result)
?and_vertebrates
cutthroat_trout_data <- and_vertebrates[and_vertebrates$species == "Cutthroat trout", ]
colnames(cutthroat_trout_data)
View(cutthroat_trout_data)
correlation_result <- cor(cutthroat_trout_data$length_1_mm, cutthroat_trout_data$weight_g, method = "pearson")
print(correlation_result)
cor_test_result <- cor.test(cutthroat_trout_data$length_1_mm, cutthroat_trout_data$weight_g)
print(cor_test_result)
View(cor_test_result)
correlation_result <- cor(cutthroat_trout_data$length_1_mm, cutthroat_trout_data$weight_g, method = "pearson")
print(correlation_result)
cor_test_result <- cor.test(cutthroat_trout_data$length_1_mm, cutthroat_trout_data$weight_g)
print(cor_test_result)
install.packages("car")
??car
install.packages("car")
??car
??car
data("pie_crab")
glimpse(pie_crab)
data("pie_crab")
?car
??car
pie_crab
library(car)
??car
data("pie_crab")
search()
library(car)
library(pie)
list.files()
ls()
help(package = "package:carData")
?pie_crab
??pie_crab
??pie_crab
glimpse(pie_crab)
library(dplyr)
glimpse(pie_crab)
remotes::install_github("lter/lterdatasampler")
glimpse(pie_crab)
remotes::install_github("lter/lterdatasampler")
remotes::install_github("lter/lterdatasampler")
force = TRUE
remotes::install_github("lter/lterdatasampler")
'force = TRUE'
devtools::install_github("username/lterdatasampler", force = TRUE)
remotes::install_github("lter/lterdatasampler")
remotes::install_github("lter/lterdatasampler", force = TRUE)
glimpse(pie_crab)
??pie_crab
glimpse(pie_crab)
remotes::install_github("lter/lterdatasampler", force = TRUE)
library(tidyverse)
library(ggpubr)
library(lterdatasampler)
library(car)
library(visdat)
library(dplyr)
library(iterdatasampler)
data(package = "lterdatasampler")
data("pie_crab")
force(pie_crab)
View(pie_crab)
?pie_crab
count(pie_crab, site)
summary(pie_crab)
pie_crab |>
ggboxplot(x = 'site', y = 'size', col = 'site') +
geom_jitter(size =.25) +
theme(legend.postition = "none")
norms <- pie_crab |>
nest(data = -site) |>
mutate(Shapiro = map(data, ~ shapiro.test(.x$size)),
n = map_dbl(data, nrow),
glance_shapiro = map(Shapiro, broom::glance)) |>
unnest(glance_shapiro)
flextable::flextable(dplyr::select(norms, site, n, statistic, p.value)) |>
flextable::set_caption("Shapiro-Wilk normality test for size at each site")
(res_aov <- aov(size ~ site, data = pie_crab))
gghistogram(res_aov$residuals)
shapiro.test(res_aov$residuals)
leveneTest(size ~ site, data = pie_crab)
oneway.test(size ~ site, data = pie_crab, var.equal = FALSE)
pie_sites <- pie_crab |>
filter(site %in% c("GTM", "DB", "PIE"))
leveneTest(size ~ site, data = pie_sites)
pie_anova <- aov(size ~ site, data = pie_sites)
summary(pie_anova)
TukeyHSD(pie_anova)
pie_lm <- lm(size ~ latitude, data = pie_crab)
summary(pie_lm)
pie_crab |>
ggscatter(x = 'latitude', y = 'size',
alpha = .35,
add = "reg.line")
new_lat <- data.frame(latitude = c(32, 36, 38))
broom::augment(pie_lm, newdata = new_lat)
summary(pie_mlm)
pie_mlm <- lm(size ~ latitude + air_temp + water_temp, data = pie_crab)
summary(pie_mlm)
pie_crab |>
dplyr::select(latitude, air_temp, water_temp) |>
cor()
colnames(pie_crab)
pie_crab$site <- factor(pie_crab$site, levels = pie_crab$site[order(pie_crab$latitude)])
pie_crab$site <- factor(pie_crab$site, levels = unique(pie_crab$site[order(pie_crab$latitude)]))
View(pie_crab)
ggplot(pie_crab, aes(x = site, y = size)) +
geom_boxplot() +
labs(title = "Carapace Width (Size) by Site",
x = "Site",
y = "Carapace Width (mm)") +
theme_minimal()
View(pie_sites)
colnames(pie_sites)
pie_sites$site <- factor(pie_sites$site, levels = pie_sites$site[order(pie_sites$latitude)])
pie_sites$site <- factor(pie_sites$site, levels = pie_sites$site[unique(pie_sites$latitude)])
pie_sites$site <- factor(pie_sites$site, levels = pie_sites$site[order(pie_sites$latitude)])
pie_sites <- pie_sites[!duplicated(pie_sites$site), ]
View(pie_sites)
rm(pie_sites)
pie_sites <- pie_crab |>
filter(site %in% c("GTM", "DB", "PIE"))
leveneTest(size ~ site, data = pie_sites)
View(pie_sites)
pie_sites$site <- factor(pie_sites$site, levels = pie_sites$site[order(pie_sites$latitude)])
unique_sites <- unique(pie_sites$site)
print(unique_sites)
colnames(pie_crab)
selected_sites <- pie_crab %>%
arrange(latitude) %>%
slice_head(n = 3) %>%
pull(site)
pie_crab_subset <- pie_crab %>%
filter(site %in% selected_sites)
View(pie_crab_subset)
unique(pie_sites)
colnames(pie_sites)
pie_sites <- pie_sites %>%
arrange(latitude) %>%
mutate(site = factor(site, levels = unique(site)))
View(pie_sites)
ggplot(pie_sites, aes(x = site, y = size, fill = site)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Carapace Width Across Sites Ordered by Latitude",
x = "Site", y = "Carapace Width (Size)") +
scale_fill_brewer(palette = "Set3")
anova_result <- aov(size ~ site, data = pie_sites)
summary(anova_result)
model_water <- lm(size ~ water_temp_sd, data = pie_sites)
View(model_water)
summary(model_water)
ggplot(pie_sites, aes(x = water_temp_sd, y = size)) +
geom_point(aes(color = "darkorange"), alpha = 0.5) +
geom_smooth(method = "lm", color = "darkblue", se = TRUE) +
labs(title = "Effect of Annual Water Temperature Variation on Carapace Width",
x = "Annual Variation in Water Temperature (SD)",
y = "Carapace Width (Size)") +
theme_minimal() +
theme(legend.position = "none")
correlation_matrix <- cor(pie_sites[, c("latitude", "air_temp_sd", "water_temp_sd")], use = "complete.obs")
print(correlation_matrix)
model_multiple <- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_sites)
summary(model_multiple)
